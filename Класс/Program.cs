#КЛАСС

Описанием объекта является класс, а объект представляет экземпляр этого класса.
Реально существующий человек (фактически экземпляр данного класса) будет представлять объект этого класса.
Человюк имеет возраст,имя и какие нибудь характеристики.То есть он является шаблоном класса.
После слова class идет имя класса и далее в фигурных скобках идет собственно содержимое класса.
class Person
{
  
}
Однако такой класс не особо показателен, поэтому добавим в него некоторую функциональность.



##ПОЛЯ,МЕТОДЫ КЛАССА,МОДИФИКАТОРЫ


Класс может хранить некоторые данные. Для хранения данных в классе применяются поля.
По сути поля класса - это переменные, определенные на уровне класса.

Кроме того, класс может определять некоторое поведение или выполняемые действия.
Для определения поведения в классе применяются методы.
class Person 
{
    public string name = "Undefined";   // имя
    public int age;                     // возраст
 
    public void Print()
    {
        Console.WriteLine($"Имя: {name}  Возраст: {age}");
    }
}
В данном случае в классе Person определено поле name, которое хранит имя, и поле age,
которое хранит возраст человека. В отличие от переменных, определенных в методах,
поля класса могут иметь модификаторы, которые указываются перед полем.
Так, в данном случае, чтобы все поля были доступны вне класса Person поля определены с модификатором public.

При определении полей мы можем присвоить им некоторые значения,
как в примере выше в случае переменной name. Если поля класса не инициализированы,
то они получают значения по умолчанию. Для переменных числовых типов это число 0.

Также в классе Person определен метод Print(). Методы класса имеют доступ к его поля,
и в данном случае обращаемся к полям класса name и age для вывода их значения на консоль.
И чтобы этот метод был виден вне класса, он также определен с модификатором public.